<div id="households-overview-page" class="expanded collapse row">
  <div class="columns">
    <div id="info-modal" class="reveal" data-reveal>
      <button class="close-button" data-close aria-label="Close modal" type="button"><span aria-hidden="true">&times;</span></button>
      <h5 class="modal-title">Household ID: <span id="modal-hh-id" class="subheader"></span></h5>
      <p>
        Head of Household: <span id="modal-hh-head"></span><br><hr>
        Number of household members: <span id="modal-hh-total"></span> (<span id="modal-hh-f"></span> <i class="fa fa-female" aria-hidden="true"></i> | <span id="modal-hh-m"></span> <i class="fa fa-male" aria-hidden="true"></i>)<br>
        Number of elderly: <span id="modal-hh-elderly-f"></span> <i class="fa fa-female" aria-hidden="true"></i> | <span id="modal-hh-elderly-m"></span> <i class="fa fa-male" aria-hidden="true"></i><br>
        Number of minors: <span id="modal-hh-minor-f"></span> <i class="fa fa-female" aria-hidden="true"></i> | <span id="modal-hh-minor-m"></span> <i class="fa fa-male" aria-hidden="true"></i><br>
      </p>
      <hr>
      <h5>Assistance Received</h5>
      <span><p id="modal-hh-core" style="margin: 0px"><i class="fa fa-fw fa-home"></i>&nbsp;Core Shelter</p></span>
      <span><p id="modal-hh-sra" style="margin: 0px"><i class="fa fa-fw fa-home"></i>&nbsp;Shelter Retrofitting Assistance</p></span>
      <span><p id="modal-hh-hla" style="margin: 0px"><i class="fa fa-fw fa-money"></i>&nbsp;Household Level Assistance</p></span>
      <br>
      <h5>Trainings Attended</h5>
      <span><p id="modal-hh-sst" style="margin: 0px"><i class="fa fa-fw fa-home"></i>&nbsp;Safer Shelter Construction Techniques</p></span>
      <span><p id="modal-hh-sted" style="margin: 0px"><i class="fa fa-fw fa-briefcase"></i>&nbsp;Skills Training and Enterprise Development</p></span>
      <span><p id="modal-hh-agri" style="margin: 0px"><i class="fa fa-fw fa-leaf"></i>&nbsp;Agricultural Extension Training</p></span>
      <span><p id="modal-hh-phast" style="margin: 0px"><i class="fa fa-fw fa-tint"></i>&nbsp;Participatory Hygiene and Sanitation Transformation</p></span>

    </div>

    <div class="button-group small btn-map-filter">
      <button class="button secondary hollow" style="background:#fff;" onclick="filtermap('all');">Show all</button>
      <button class="button secondary hollow" style="background:#fff;" onclick="filtermap('addfilters');"><i class="fa fa-filter" aria-hidden="true"></i> Filters</button>

      <div class="filter-panel panel-group row">
        <div class="filter-panel panel panel-default small-columns 12" >
      			<ul class="tabs" data-active-collapse="true" data-tabs id="collapsing-tabs">
      				<!-- panel titles go here -->

      	    </ul>
      			<div class="tabs-content" data-tabs-content="collapsing-tabs" id="tabsdiv">
      			<!-- collapse divs go here -->
      			</div>
        </div>
      </div>

    </div>

    <div id="map"></div>

  </div>
</div>




<link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.0.3/dist/leaflet.js"></script>
<script>

var height = $(window).height();
$('#map').height(height);
$(window).resize(function(){
  height = $(window).height();
  $('#map').height(height);
})

var data, points;
var trainingData;

// create basic leaflet map
// ========================
// tile layer for base map
var hotUrl = 'http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png',
  hotAttribution = '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>, Tiles from <a href="http://hot.openstreetmap.org/" target="_blank">H.O.T.</a>',
  hotLayer = L.tileLayer(hotUrl, {attribution: hotAttribution});
// initialize map w options
var map = L.map('map', {
  layers: [hotLayer],
  center: new L.LatLng(0,0),
  zoom: 2,
  minZoom: 2
});

var mapBounds = L.latLngBounds([10.714586690981509,124.71954345703126],[11.321173722096153,126.28509521484375])
map.fitBounds(mapBounds);

// initialize the SVG layer for D3 drawn markers
L.svg().addTo(map);
// pick up the SVG from the map object
var svg = d3.select('#map').select('svg');
var pointsGroup = svg.append('g').attr('id', 'markers')
  // .attr('class', 'leaflet-zoom-hide');

function getHouseholds(){
	$.get('{{opts.nginxlocation}}api/pages/households-overview/hhlocations', function(response) {
    response.forEach(function(d, i) {
      if(!isNaN(d.lat) && !isNaN(d.lng)) {
        d.LatLng = new L.LatLng(parseFloat(d.lat), parseFloat(d.lng));
      }
    });
		data = response;
		drawPoints();Â 
	});
}

function drawPoints(){
	points = pointsGroup.selectAll("circle")
    .data(data).enter().append("circle")
    .classed('point', true)
    .attr('fill', "#ed1b2e")
    .on('click', function(d){ clickedHousehold(d, this); })

  // when map view changes adjust the locations of the svg circles
  updatePoint = function() {
    points.attr('cx',function(d) { return map.latLngToLayerPoint(d.LatLng).x; });
    points.attr('cy',function(d) { return map.latLngToLayerPoint(d.LatLng).y; });
	}
	map.on('zoom move viewreset', updatePoint);
	updatePoint();
  createFilterPageElement();
}

function createFilterPageElement() {
  buildFilterHTML('Shelter','shelter',['Core','SRA'],false);
  buildFilterHTML('Livelihood','livelihood',['HLA','STED'],false);
  $('.filter-panel ul').append(panelTitles);
  Foundation.reInit($('.filter-panel ul'));
  $('.filter-panel.panel-group').hide();
}

function getTrainings(trainingQuery, callback){
  $.get(trainingQuery, function(response){ callback(null, response); });
}

function setTrainings(error, result){
  trainingData = result;
}

d3.queue().defer(getTrainings,'{{opts.nginxlocation}}api/pages/safer-shelter-training')
       .defer(getTrainings,'{{opts.nginxlocation}}api/pages/phast')
       .defer(getTrainings,'{{opts.nginxlocation}}api/pages/agriculture')
       .awaitAll(setTrainings);

var hhtraining = [];
var phFilter;

function filterHouseholdTrainings(id, arraySource, callback){
  var a = arraySource.filter(function(d){ if (d.participant_id === id){ return d; } });
  callback(null,a);
}

function getHouseholdTrainings(error, result){
  result.forEach(function(d){ if(d.length > 0){ d.forEach(function(e){ hhtraining.push(e);}) }  });
}

function clickedHousehold(data, target){

  d3.queue()
    .defer(filterHouseholdTrainings, data.id, trainingData[0])
    .defer(filterHouseholdTrainings, data.id, trainingData[2])
    .awaitAll(getHouseholdTrainings);

  phFilter  = trainingData[1].filter(function(d){ return d.household_id === data.id});

  $.get('{{opts.nginxlocation}}api/pages/households-overview/hhoverview/' + data.id, function(response) {
    // # response should be an array containing one object
    if(response[0]){
      var head = response[0].head_of_hh_fname;
      head += (response[0].head_of_hh_mname === null) ? " " : " " + response[0].head_of_hh_mname + " ";
      head += response[0].head_of_hh_lname;
      $("#modal-hh-id").empty().text(response[0].household_id);
      $("#modal-hh-head").empty().text(head);
      $("#modal-hh-total").empty().text(response[0].num_of_members);
      $("#modal-hh-f").empty().text(response[0].num_of_females);
      $("#modal-hh-m").empty().text(response[0].num_of_males);
      $("#modal-hh-elderly-f").empty().text(response[0].vul_female_elderly);
      $("#modal-hh-elderly-m").empty().text(response[0].vul_male_elderly);
      $("#modal-hh-minor-f").empty().text(response[0].vul_female_minor);
      $("#modal-hh-minor-m").empty().text(response[0].vul_male_minor);

      data.sra !== null ?  $("#modal-hh-sra").show() : $("#modal-hh-sra").hide();
      data.ccg !== null ?  $("#modal-hh-ccg").show() : $("#modal-hh-ccg").hide();
      data.core !== null ?  $("#modal-hh-core").show() : $("#modal-hh-core").hide();
      data.sted !== null ?  $("#modal-hh-sted").show() : $("#modal-hh-sted").hide();

      hhtraining !== null && hhtraining.filter(function(a){ return a.sector==="Shelter" }).length > 0 ? $("#modal-hh-sst").show() : $("#modal-hh-sst").hide();
      hhtraining !== null && hhtraining.filter(function(a){ return a.sector==="Livelihood" }).length > 0 ?  $("#modal-hh-agri").show() : $("#modal-hh-agri").hide();
      phFilter.length > 0 ?  $("#modal-hh-phast").show() : $("#modal-hh-phast").hide();

      hhtraining = [];

      $("#info-modal").foundation('open');
    } else {
      $("#modal-hh-id").empty().html("<i>Sorry, an error occurred.</i>");
      $("#modal-hh-head").empty();
      $("#modal-hh-total").empty();
      $("#modal-hh-f").empty();
      $("#modal-hh-m").empty();
      $("#modal-hh-elderly-f").empty();
      $("#modal-hh-elderly-m").empty();
      $("#modal-hh-minor-f").empty();
      $("#modal-hh-minor-m").empty();
      $("#info-modal").foundation('open');
    }
  });
}

var locationLookup = {};

function getLocationData(){
  $.get('{{opts.nginxlocation}}api/pages/targetlocations', function(response){
    $.each(response, function(index, location){
      locationLookup[location.location_id] = location;
      locationLookup[location['location_id'].slice(0,2)] = location;
    });
  });
}

var panelTitles = [];

function buildFilterHTML(title, dataId, array, geo){
  var thisTitleHtml = '<li class="tabs-title">' +
    '<a href="#' + dataId + '">' + title + '</a></li>';
  panelTitles.push(thisTitleHtml);
  var thisBodyHtml = '<div class="tabs-panel" id="' + dataId + '">';
  $.each(array, function(i, a){
    thisBodyHtml += '<div class="checkbox"><label><input type="checkbox" name="'+ dataId + '" value="' + a + '" onchange="filter();">' + a + '</label></div>';
  })
  thisBodyHtml += '</div>';
  $('#tabsdiv').append(thisBodyHtml);
}

function filtermap(wat) {
  if(wat=="all") {
    $('.filter-panel.panel-group').hide();
    clearAllFilters();
  } else if(wat=="addfilters") {
    if($('.filter-panel.panel-group').is(':visible')){
      $('.filter-panel.panel-group').hide();
    } else {
      $('.checkbox input:checkbox').click(function() {
        // only one checked at a time
        $('.checkbox input:checkbox').not(this).prop('checked', false);
      });
      $('.filter-panel.panel-group').show();
    }
  }
}

function clearAllFilters(){
  points.classed("hide", false);
  var allCheckboxes = $.find("input:checkbox");
  $.each(allCheckboxes, function(i, box){ $(box).prop('checked',false); });
}

function filter(){

  var activeFilters = []

  checkboxes = $(".filter-panel.panel input[type=checkbox]");
    for (i=0; i<checkboxes.length; i++) {
      if(checkboxes[i].checked === true) {
        activeFilters.push({
          filterKey: checkboxes[i].name,
          filterValue: checkboxes[i].value
        })
      }
    }

  if(activeFilters.length > 0 && activeFilters[0].filterValue == "Core"){
    points.classed("hide", true).filter(function(d){ return d.core !== null }).classed("hide", false);
  }
  else if(activeFilters.length > 0 && activeFilters[0].filterValue === "SRA"){
    points.classed("hide", true).filter(function(d){ return d.sra !== null }).classed("hide", false);
  }
  else if(activeFilters.length > 0 && activeFilters[0].filterValue === "STED"){
    points.classed("hide", true).filter(function(d){ return d.sted !== null }).classed("hide", false);
  }
  else if(activeFilters.length > 0 && activeFilters[0].filterValue === "HLA"){
    points.classed("hide", true).filter(function(d){ return d.ccg !== null }).classed("hide", false);
  }
  else{
    points.classed("hide", false);
  }
}

getHouseholds()

</script>
