<style>

.table-indicators {
	background: #fff;
	table-layout: auto !important;
}
.progress-pie {
	float: left;
	margin: 2px 22px 2px 8px;
}

</style>

<div class="container">

<header class="row header">
	<div class="col-md-12">
		<h1>Hardware Indicators </h1>
	</div>
</header>

<hr>

<div id="hardware-sectors"></div>

<hr>
<footer id="site-footer">
	<div class="row row-logo">
				{{{logos}}}
			</div>
</footer>

</div> <!-- / container -->

<script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
<script>

function getNumber(str){
  return (isNaN(parseFloat(str))) ? 0 : parseFloat(str);
}
var commas = d3.format(",");

function getProgress(){
  $.ajax({
    type: 'POST',
    url: 'hardware',
    dataType: 'JSON'
  }).done(function(response){
    buildPage(response);
  });
}

function buildPage(response){

	var sectorList = d3.set(response.map(function(d){ return d.indicator_sector; })).values();

	response.forEach(function(d){
		var actual = getNumber(d.indicator_actual);
		var target = getNumber(d.indicator_target);
		var remainder = (target - actual > 0) ? (target - actual) : 0;
		d.pie = [
			{ label: 'actual', count: actual },
			{ label: 'remainder', count: remainder }
		]
	})

	var tables = d3.select('#hardware-sectors').selectAll('div').data(sectorList).enter()
		.append('div').append('div').sort(function(a,b){ return d3.ascending(a, b); })
		.html(function(d){
			return '<h4>' + d + '</h4>';
		}).append('table').attr('class', 'table-indicators')

	var indicators = tables.selectAll('tr').data(function(a){  return response.filter(function(b){ return a === b.indicator_sector; }); }).enter()
			.append('tr')

	indicators.sort(function(a,b){
		return d3.ascending(a.indicator, b.indicator);
	})

	var width = 30,
			height = 30,
			radius = Math.min(width, height) / 2,
			arc = d3.svg.arc().outerRadius(radius),
			pie = d3.layout.pie().value(function(d){ return d.count })

	var rows = indicators.append('td')

	var svg = rows.append('svg')
		.attr('class', 'progress-pie')
		.attr('width', width).attr('height', height)
		.append('g').attr('transform', 'translate(' + (width / 2) + ',' + (height / 2) + ')')

	var g = svg.selectAll('g').data(function(d) { return pie(d.pie); }).enter().append('path')
		.attr('d', arc)
		.style("fill", function(d) { return (d.data.label === "actual") ? "#8ec06c" : "#d7d7d8"; });

	var reference = rows.append('div').html(function(d){
		return '<div>' + d.indicator + '</div><div><small><b>' + commas(d.indicator_actual) + '</b> of <b>' + commas(d.indicator_target) + '</b></small><div>'
	});

}

getProgress();

</script>
